{"version":3,"sources":["components/feedbackOptions/FeedbackOptions.module.css","components/notification/Notification.module.css","components/feedback/Feedback.js","components/feedbackOptions/FeedbackOptions.js","components/section/Section.js","components/notification/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Feedback","good","neutral","bad","total","procent","FeedbackOptions","onLeaveFeedback","className","s","button","onClick","Section","title","children","Notification","message","noFeadback","App","useState","setGood","setNeutral","setBad","countTotalFeedback","name","positive","x","toFixed","countPositiveFeedbackPercentage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,OAAS,kC,mBCA3BD,EAAOC,QAAU,CAAC,WAAa,mC,qKCchBC,MAZf,YAA2D,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,IAAKC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAC7C,OACE,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,W,gBCOSC,MAhBf,YAA+C,IAApBC,EAAmB,EAAnBA,gBACzB,OACE,8BACE,wBAAQC,UAAWC,IAAEC,OAAQC,QAAS,kBAAMJ,EAAgB,SAA5D,kBAGA,wBAAQC,UAAWC,IAAEC,OAAQC,QAAS,kBAAMJ,EAAgB,YAA5D,qBAGA,wBAAQC,UAAWC,IAAEC,OAAQC,QAAS,kBAAMJ,EAAgB,QAA5D,qBCCSK,MATf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,qCACE,6BAAKD,IACJC,M,gBCAQC,MAJf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,mBAAGR,UAAWC,IAAEQ,WAAhB,SAA6BD,KCiEvBE,MA7Df,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACNlB,EADM,KACAmB,EADA,OAEiBD,mBAAS,GAF1B,mBAENjB,EAFM,KAEGmB,EAFH,OAGSF,mBAAS,GAHlB,mBAGNhB,EAHM,KAGDmB,EAHC,KAwBPC,EAAqB,WACzB,OAAOtB,EAAOC,EAAUC,GAc1B,OACE,sBAAKK,UAAU,YAAf,UACE,cAAC,EAAD,CAASK,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBN,gBArCG,SAAAiB,GACxB,OAAQA,GACN,IAAK,OACHJ,GAAQ,SAAAX,GAAC,OAAIA,EAAI,KACjB,MAEF,IAAK,UACHY,GAAW,SAAAZ,GAAC,OAAIA,EAAI,KACpB,MAEF,IAAK,MACHa,GAAO,SAAAb,GAAC,OAAIA,EAAI,KAChB,MAEF,QACE,aAwBF,cAAC,EAAD,CAASI,MAAM,YAAf,SAC4B,IAAzBU,IACC,cAAC,EAAD,CAAcP,QAAQ,sBAEtB,cAAC,EAAD,CACEf,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOmB,IACPlB,QA1B8B,WACtC,IAAMoB,EAAWxB,EACXG,EAAQmB,IAEVG,GAAiB,IAAXD,EAAkBrB,GAAOuB,QAAQ,GAK3C,OAHc,IAAVvB,IACFsB,EAAI,GAECA,EAiBUE,WChDNC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.48a4f4c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3RLKN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noFeadback\":\"Notification_noFeadback__cLiH4\"};","import React from 'react';\r\nimport './Feedback.module.css';\r\n\r\nfunction Feedback({ good, neutral, bad, total, procent }) {\r\n  return (\r\n    <>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive feedback: {procent}%</p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Feedback;\r\n","import s from './FeedbackOptions.module.css';\r\nfunction FeedbackOptions({ onLeaveFeedback }) {\r\n  return (\r\n    <p>\r\n      <button className={s.button} onClick={() => onLeaveFeedback('good')}>\r\n        Good\r\n      </button>\r\n      <button className={s.button} onClick={() => onLeaveFeedback('neutral')}>\r\n        Neutral\r\n      </button>\r\n      <button className={s.button} onClick={() => onLeaveFeedback('bad')}>\r\n        Bad\r\n      </button>\r\n    </p>\r\n  );\r\n}\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport s from './Notification.module.css';\r\nfunction Notification({ message }) {\r\n  return <p className={s.noFeadback}>{message}</p>;\r\n}\r\n\r\nexport default Notification;\r\n","import { useState } from 'react';\nimport './App.css';\nimport Feedback from './components/feedback';\nimport FeedbackOptions from './components/feedbackOptions';\nimport Section from './components/section';\nimport Notification from './components/notification';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const incrementFeedback = name => {\n    switch (name) {\n      case 'good': {\n        setGood(s => s + 1);\n        break;\n      }\n      case 'neutral': {\n        setNeutral(s => s + 1);\n        break;\n      }\n      case 'bad': {\n        setBad(s => s + 1);\n        break;\n      }\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n  const countPositiveFeedbackPercentage = () => {\n    const positive = good;\n    const total = countTotalFeedback();\n\n    let x = ((positive * 100) / total).toFixed(2);\n\n    if (total === 0) {\n      x = 0;\n    }\n    return x;\n  };\n\n  return (\n    <div className=\"container\">\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions onLeaveFeedback={incrementFeedback} />\n      </Section>\n      <Section title=\"Statistic\">\n        {countTotalFeedback() === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Feedback\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            procent={countPositiveFeedbackPercentage()}\n          />\n        )}\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}